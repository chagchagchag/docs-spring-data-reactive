(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[73],{3006:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/spring-data-redis-reactive/redis-connector",function(){return n(5985)}])},5985:function(e,t,n){"use strict";n.r(t),n.d(t,{__toc:function(){return s}});var r=n(5893),i=n(2673),a=n(373),d=n(8426);n(9128);var o=n(2643);let s=[{depth:2,value:"Redis Connector (Lettuce, Jedis)",id:"redis-connector-lettuce-jedis"},{depth:2,value:"지원되는 기능",id:"지원되는-기능"},{depth:2,value:"성능 비교",id:"성능-비교"}];function _createMdxContent(e){let t=Object.assign({h2:"h2",p:"p",a:"a",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",ul:"ul",li:"li"},(0,o.a)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"redis-connector-lettuce-jedis",children:"Redis Connector (Lettuce, Jedis)"}),"\n",(0,r.jsxs)(t.p,{children:["Spring 은 jedis, lettuce 를 모두 지원하며 기본 설정은 lettuce 입니다. 만약 jedis 가 필요할 경우에는 설정을 변경하면 됩니다.",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(t.p,{children:["결론부터 이야기하면, Lettuce 가 성능 면에서 더 우위에 있습니다. 이와 관련된 자료는 ",(0,r.jsx)(t.a,{href:"https://jojoldu.tistory.com/418",children:"Jedis 보다 Lettuce 를 쓰자"})," 를 참고해주시기 바랍니다.",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(t.h2,{id:"지원되는-기능",children:"지원되는 기능"}),"\n",(0,r.jsxs)(t.p,{children:["몇몇 지원되는 스펙들을 표로 정리해보면 아래와 같습니다.",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(t.p,{children:"Lettuce 에서는 Sentinel, Cluster Node Connection, Replica Reads 가 지원되는 점에서 고가용성 측면에서 다양한 커넥션 환경을 지원합니다. Lettuce 에서 epoll/kqueue 가 지원된다는 점, Reactive non-blocking 이 지원된다는 점을 통해서 Lettuce가 조금 더 동시성 환경이 잘 지원된다는 점에서 장점을 가지고 있습니다."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Feature"}),(0,r.jsx)(t.th,{children:"Lettuce"}),(0,r.jsx)(t.th,{children:"Jedis"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Master/Replica 지원"}),(0,r.jsx)(t.td,{children:"지원"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Redis Sentinel"}),(0,r.jsx)(t.td,{children:"Master Lookup, Sentinel Authentication, Replica Reads"}),(0,r.jsx)(t.td,{children:"Master Lookup"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Redis Cluster"}),(0,r.jsx)(t.td,{children:"Cluster Connections, Cluster Node Connections, Replica Reads"}),(0,r.jsx)(t.td,{children:"Cluster Connections, Cluster Node Connections"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Transport Channels"}),(0,r.jsx)(t.td,{children:"TCP, epoll/kqueue 지원, Unix Domain Socket 지원"}),(0,r.jsx)(t.td,{children:"TCP"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Connection Pool"}),(0,r.jsx)(t.td,{children:"common-pool2"}),(0,r.jsx)(t.td,{children:"common-pool2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SSL 지원여부"}),(0,r.jsx)(t.td,{children:"지원"}),(0,r.jsx)(t.td,{children:"지원"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Pub/Sub"}),(0,r.jsx)(t.td,{children:"지원"}),(0,r.jsx)(t.td,{children:"지원"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Pipeline"}),(0,r.jsx)(t.td,{children:"지원"}),(0,r.jsx)(t.td,{children:"지원 (Transaction 과 함께 사용 불가)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Reactive non-blocking"}),(0,r.jsx)(t.td,{children:"지원"}),(0,r.jsx)(t.td,{children:"미지원"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Stream 지원"}),(0,r.jsx)(t.td,{children:"지원"}),(0,r.jsx)(t.td,{children:"미지원"})]})]})]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.h2,{id:"성능-비교",children:"성능 비교"}),"\n",(0,r.jsxs)(t.p,{children:["성능에 대한 자세한 내용은 ",(0,r.jsx)(t.a,{href:"https://jojoldu.tistory.com/418",children:"Jedis 보다 Lettuce 를 쓰자"})," 을 참고해주시기 바라며, ",(0,r.jsx)(t.a,{href:"https://jojoldu.tistory.com/418",children:"Jedis 보다 Lettuce 를 쓰자"})," 의 내용을 요약해보면 아래와 같습니다."]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["TPS","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Lettuce (100000) / Jedis (최대 55000)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["Redis CPU","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Lettuce (7%) / Jedis (69.5%)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["Redis Connection 수","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Lettuce (최대 6개) / Jedis (최대 515 개 까지 증가)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["응답속도","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Lettuce (최대 7.5ms) / Jedis (최대 50ms)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)("br",{})]})}let c={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,o.a)(),e.components);return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)},pageOpts:{filePath:"pages/spring-data-redis-reactive/redis-connector.mdx",route:"/spring-data-redis-reactive/redis-connector",timestamp:1712130401e3,pageMap:[{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"spring-data-mongodb-reactive",route:"/spring-data-mongodb-reactive",children:[{kind:"MdxPage",name:"aggregation-pipeline",route:"/spring-data-mongodb-reactive/aggregation-pipeline"},{kind:"MdxPage",name:"document-bson-bson-codec",route:"/spring-data-mongodb-reactive/document-bson-bson-codec"},{kind:"MdxPage",name:"entity",route:"/spring-data-mongodb-reactive/entity"},{kind:"MdxPage",name:"mongo-collection-functions",route:"/spring-data-mongodb-reactive/mongo-collection-functions"},{kind:"MdxPage",name:"mongodb-features",route:"/spring-data-mongodb-reactive/mongodb-features"},{kind:"MdxPage",name:"mongodb-reactive-streams-driver",route:"/spring-data-mongodb-reactive/mongodb-reactive-streams-driver"},{kind:"MdxPage",name:"mongodb-tools",route:"/spring-data-mongodb-reactive/mongodb-tools"},{kind:"MdxPage",name:"query-methods",route:"/spring-data-mongodb-reactive/query-methods"},{kind:"MdxPage",name:"reactive-mongo-operation",route:"/spring-data-mongodb-reactive/reactive-mongo-operation"},{kind:"MdxPage",name:"reactive-mongo-repository",route:"/spring-data-mongodb-reactive/reactive-mongo-repository"},{kind:"MdxPage",name:"reactive-mongo-template",route:"/spring-data-mongodb-reactive/reactive-mongo-template"},{kind:"MdxPage",name:"spring-data-object-mapping-and-creation",route:"/spring-data-mongodb-reactive/spring-data-object-mapping-and-creation"},{kind:"MdxPage",name:"transactional-transactional-operator",route:"/spring-data-mongodb-reactive/transactional-transactional-operator"},{kind:"Meta",data:{"mongodb-features":"MongoDB Features","mongodb-tools":"MongoDB 접근 도구들","mongodb-reactive-streams-driver":"MongoDB Reactive Streams Driver","mongo-collection-functions":"MongoCollection 의 다양한 연산들","document-bson-bson-codec":"Document, BSON, BSON Codec",entity:"Entity","spring-data-object-mapping-and-creation":"Spring Data Reactive 의 객채생성 방식과 매핑방식","reactive-mongo-template":"ReactiveMongoTemplate","reactive-mongo-operation":"ReactiveMongoOperation","reactive-mongo-repository":"ReactiveMongoRepository","query-methods":"Query 메서드","aggregation-pipeline":"Aggregation Pipeline","transactional-transactional-operator":"@Transactional, TransactionalOperator"}}]},{kind:"MdxPage",name:"spring-data-mongodb-reactive",route:"/spring-data-mongodb-reactive"},{kind:"Folder",name:"spring-data-r2dbc",route:"/spring-data-r2dbc",children:[{kind:"MdxPage",name:"entity-mysql-type-mapping",route:"/spring-data-r2dbc/entity-mysql-type-mapping"},{kind:"MdxPage",name:"example-mysql-docker-container",route:"/spring-data-r2dbc/example-mysql-docker-container"},{kind:"MdxPage",name:"jdbc-jpa-vs-r2dbc",route:"/spring-data-r2dbc/jdbc-jpa-vs-r2dbc"},{kind:"MdxPage",name:"mysql-features",route:"/spring-data-r2dbc/mysql-features"},{kind:"MdxPage",name:"query-methods",route:"/spring-data-r2dbc/query-methods"},{kind:"MdxPage",name:"r2dbc-drivers-r2dbc-spi",route:"/spring-data-r2dbc/r2dbc-drivers-r2dbc-spi"},{kind:"MdxPage",name:"r2dbc-entity-template-r2dbc-entity-operations",route:"/spring-data-r2dbc/r2dbc-entity-template-r2dbc-entity-operations"},{kind:"MdxPage",name:"r2dbc-repository",route:"/spring-data-r2dbc/r2dbc-repository"},{kind:"MdxPage",name:"simple-r2dbc-code",route:"/spring-data-r2dbc/simple-r2dbc-code"},{kind:"MdxPage",name:"spring-data-object-mapping-and-creation",route:"/spring-data-r2dbc/spring-data-object-mapping-and-creation"},{kind:"MdxPage",name:"transactional-transactional-operator",route:"/spring-data-r2dbc/transactional-transactional-operator"},{kind:"Meta",data:{"mysql-features":"MySQL 특징","jdbc-jpa-vs-r2dbc":"JDBC, JPA 와의 차이점","r2dbc-drivers-r2dbc-spi":"R2DBC 드라이버, R2DBC SPI, Connection 설정","simple-r2dbc-code":"R2DBC 기반 Raw 레벨 코드, Transaction","entity-mysql-type-mapping":"Entity, MySQL 타입 매핑","spring-data-object-mapping-and-creation":"Spring Data Reactive 의 객체생성 방식과 필드 매핑방식","r2dbc-repository":"R2dbcRepository","query-methods":"Query Methods","transactional-transactional-operator":"@Transactional, TransactionalOperator","r2dbc-entity-template-r2dbc-entity-operations":"R2dbcEntityTemplate, R2dbcEntityOperations, FluentR2dbcOperations","example-mysql-docker-container":"예제 용도의 MySQL Docker Container"}}]},{kind:"MdxPage",name:"spring-data-r2dbc",route:"/spring-data-r2dbc"},{kind:"Folder",name:"spring-data-redis-reactive",route:"/spring-data-redis-reactive",children:[{kind:"MdxPage",name:"known-cache-strategies",route:"/spring-data-redis-reactive/known-cache-strategies"},{kind:"MdxPage",name:"luttuce-examples",route:"/spring-data-redis-reactive/luttuce-examples"},{kind:"MdxPage",name:"redis-connector",route:"/spring-data-redis-reactive/redis-connector"},{kind:"MdxPage",name:"redis-data-structures",route:"/spring-data-redis-reactive/redis-data-structures"},{kind:"MdxPage",name:"redis-replication-sentinel-cluster",route:"/spring-data-redis-reactive/redis-replication-sentinel-cluster"},{kind:"MdxPage",name:"spring-data-redis-reactive-redis-operations",route:"/spring-data-redis-reactive/spring-data-redis-reactive-redis-operations"},{kind:"Meta",data:{"redis-replication-sentinel-cluster":"Redis Replication,Sentinel, Cluster","redis-connector":"Redis Connector (Lettuce, Jedis)","redis-data-structures":"레디스 자료구조들","luttuce-examples":"luttuce 기반 예제 코드들","spring-data-redis-reactive-redis-operations":"Spring Data Redis Reactive, RedisOperations","known-cache-strategies":"캐싱전략의 종류"}}]},{kind:"MdxPage",name:"spring-data-redis-reactive",route:"/spring-data-redis-reactive"},{kind:"Meta",data:{index:"Introduction","spring-data-r2dbc":"Spring Data R2dbc","spring-data-mongodb-reactive":"Spring Data MongoDB Reactive","spring-data-redis-reactive":"Spring Data Redis Reactive",contact:{title:"Contact ↗",type:"page",href:"-",newWindow:!0}}}],flexsearch:{codeblocks:!0},title:"Redis Connector",headings:s},pageNextRoute:"/spring-data-redis-reactive/redis-connector",nextraLayout:a.ZP,themeConfig:d.Z};t.default=(0,i.j)(c)},8426:function(e,t,n){"use strict";var r=n(5893);n(7294);let i={logo:(0,r.jsx)("span",{children:"Docs Spring Data Reactive"}),project:{link:"https://github.com/chagchagchag/docs-spring-data-reactive"},docsRepositoryBase:"https://github.com/chagchagchag/docs-spring-data-reactive",footer:{text:"Nextra Docs Template"}};t.Z=i},5789:function(){}},function(e){e.O(0,[774,796,888,179],function(){return e(e.s=3006)}),_N_E=e.O()}]);