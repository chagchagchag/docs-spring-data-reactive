(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[418],{5111:function(e,r,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/spring-data-r2dbc/r2dbc-drivers-r2dbc-spi",function(){return n(8007)}])},8007:function(e,r,n){"use strict";n.r(r),n.d(r,{__toc:function(){return s}});var a=n(5893),t=n(2673),i=n(373),d=n(8426);n(9128);var o=n(2643);let s=[{depth:2,value:"R2DBC 드라이버, R2DBC SPI, Connection 설정",id:"r2dbc-드라이버-r2dbc-spi-connection-설정"},{depth:2,value:"DBMS 별 R2DBC 지원 여부",id:"dbms-별-r2dbc-지원-여부"}];function _createMdxContent(e){let r=Object.assign({h2:"h2",blockquote:"blockquote",p:"p",a:"a",strong:"strong",ul:"ul",li:"li"},(0,o.a)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.h2,{id:"r2dbc-드라이버-r2dbc-spi-connection-설정",children:"R2DBC 드라이버, R2DBC SPI, Connection 설정"}),"\n",(0,a.jsx)(r.h2,{id:"dbms-별-r2dbc-지원-여부",children:"DBMS 별 R2DBC 지원 여부"}),"\n",(0,a.jsxs)(r.blockquote,{children:["\n",(0,a.jsxs)(r.p,{children:["참고 : ",(0,a.jsx)(r.a,{href:"https://r2dbc.io/drivers/",children:"r2dbc.io/drivers"})]}),"\n"]}),"\n",(0,a.jsxs)(r.p,{children:["사용하려는 데이터베이스에 R2DBC가 지원되는지 여부는 ",(0,a.jsx)(r.a,{href:"https://r2dbc.io/drivers/",children:"r2dbc.io/drivers"})," 에서도 확인 가능하며, Driver Implementations 절에 있는 내용을 정리해보면 아래와 같습니다.",(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"kotlin 기반의 MySQL, PostgreSQL Database Driver"})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"https://github.com/jasync-sql/jasync-sql",children:"jasync-sql"})," - R2DBC wrapper for Java & Kotlin Async Database Driver for MySQL and PostgreSQL (written in Kotlin)."]}),"\n"]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"h2"})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"https://github.com/r2dbc/r2dbc-h2",children:"r2dbc-h2"})," - native driver implemented for H2 as a test database."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"https://github.com/mariadb-corporation/mariadb-connector-r2dbc",children:"r2dbc-mariadb"})," - native driver implemented for MariaDB."]}),"\n"]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"mysql, mariadb"})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"https://github.com/asyncer-io/r2dbc-mysql",children:"r2dbc-mysql"})," - native driver implemented for MySQL (previously ",(0,a.jsx)(r.a,{href:"https://github.com/mirromutth/r2dbc-mysql",children:"mirromutth/r2dbc-mysql"}),")."]}),"\n"]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"PostgreSQL"})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"https://github.com/pgjdbc/r2dbc-postgresql",children:"r2dbc-postgresql"})," - native driver implemented for PostgreSQL."]}),"\n"]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"Oracle"})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"https://github.com/oracle/oracle-r2dbc",children:"oracle-r2dbc"})," - native driver implemented for Oracle."]}),"\n"]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"MSSQL"})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"https://github.com/r2dbc/r2dbc-mssql",children:"r2dbc-mssql"})," - native driver implemented for Microsoft SQL Server."]}),"\n"]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"etc"})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"https://github.com/ClickHouse/clickhouse-java/tree/main/clickhouse-r2dbc",children:"clickhouse-r2dbc"})," - R2DBC wrapper of async Java client for ClickHouse."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"https://github.com/GoogleCloudPlatform/cloud-spanner-r2dbc",children:"cloud-spanner-r2dbc"})," - driver for Google Cloud Spanner."]}),"\n"]}),"\n",(0,a.jsx)("br",{})]})}let c={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,o.a)(),e.components);return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)},pageOpts:{filePath:"pages/spring-data-r2dbc/r2dbc-drivers-r2dbc-spi.mdx",route:"/spring-data-r2dbc/r2dbc-drivers-r2dbc-spi",timestamp:1711962365e3,pageMap:[{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"spring-data-mongodb-reactive",route:"/spring-data-mongodb-reactive",children:[{kind:"MdxPage",name:"aggregation-pipeline",route:"/spring-data-mongodb-reactive/aggregation-pipeline"},{kind:"MdxPage",name:"document-bson-bson-codec",route:"/spring-data-mongodb-reactive/document-bson-bson-codec"},{kind:"MdxPage",name:"entity",route:"/spring-data-mongodb-reactive/entity"},{kind:"MdxPage",name:"mongo-collection-functions",route:"/spring-data-mongodb-reactive/mongo-collection-functions"},{kind:"MdxPage",name:"mongodb-features",route:"/spring-data-mongodb-reactive/mongodb-features"},{kind:"MdxPage",name:"mongodb-reactive-streams-driver",route:"/spring-data-mongodb-reactive/mongodb-reactive-streams-driver"},{kind:"MdxPage",name:"mongodb-tools",route:"/spring-data-mongodb-reactive/mongodb-tools"},{kind:"MdxPage",name:"query-methods",route:"/spring-data-mongodb-reactive/query-methods"},{kind:"MdxPage",name:"reactive-mongo-operation",route:"/spring-data-mongodb-reactive/reactive-mongo-operation"},{kind:"MdxPage",name:"reactive-mongo-repository",route:"/spring-data-mongodb-reactive/reactive-mongo-repository"},{kind:"MdxPage",name:"reactive-mongo-template",route:"/spring-data-mongodb-reactive/reactive-mongo-template"},{kind:"MdxPage",name:"spring-data-object-mapping-and-creation",route:"/spring-data-mongodb-reactive/spring-data-object-mapping-and-creation"},{kind:"MdxPage",name:"transactional-transactional-operator",route:"/spring-data-mongodb-reactive/transactional-transactional-operator"},{kind:"Meta",data:{"mongodb-features":"MongoDB Features","mongodb-tools":"MongoDB 접근 도구들","mongodb-reactive-streams-driver":"MongoDB Reactive Streams Driver","mongo-collection-functions":"MongoCollection 의 다양한 연산들","document-bson-bson-codec":"Document, BSON, BSON Codec",entity:"Entity","spring-data-object-mapping-and-creation":"Spring Data Reactive 의 객채생성 방식과 매핑방식","reactive-mongo-template":"ReactiveMongoTemplate","reactive-mongo-operation":"ReactiveMongoOperation","reactive-mongo-repository":"ReactiveMongoRepository","query-methods":"Query 메서드","aggregation-pipeline":"Aggregation Pipeline","transactional-transactional-operator":"@Transactional, TransactionalOperator"}}]},{kind:"MdxPage",name:"spring-data-mongodb-reactive",route:"/spring-data-mongodb-reactive"},{kind:"Folder",name:"spring-data-r2dbc",route:"/spring-data-r2dbc",children:[{kind:"MdxPage",name:"entity-mysql-data-mapping",route:"/spring-data-r2dbc/entity-mysql-data-mapping"},{kind:"MdxPage",name:"jdbc-jpa-vs-r2dbc",route:"/spring-data-r2dbc/jdbc-jpa-vs-r2dbc"},{kind:"MdxPage",name:"mysql-features",route:"/spring-data-r2dbc/mysql-features"},{kind:"MdxPage",name:"query-methods",route:"/spring-data-r2dbc/query-methods"},{kind:"MdxPage",name:"r2dbc-drivers-r2dbc-spi",route:"/spring-data-r2dbc/r2dbc-drivers-r2dbc-spi"},{kind:"MdxPage",name:"r2dbc-entity-operations",route:"/spring-data-r2dbc/r2dbc-entity-operations"},{kind:"MdxPage",name:"r2dbc-entity-template",route:"/spring-data-r2dbc/r2dbc-entity-template"},{kind:"MdxPage",name:"r2dbc-repository",route:"/spring-data-r2dbc/r2dbc-repository"},{kind:"MdxPage",name:"simple-r2dbc-code",route:"/spring-data-r2dbc/simple-r2dbc-code"},{kind:"MdxPage",name:"spring-data-object-mapping-and-creation",route:"/spring-data-r2dbc/spring-data-object-mapping-and-creation"},{kind:"MdxPage",name:"transactional-transactional-operator",route:"/spring-data-r2dbc/transactional-transactional-operator"},{kind:"Meta",data:{"mysql-features":"MySQL 특징","jdbc-jpa-vs-r2dbc":"JDBC, JPA 와의 차이점","r2dbc-drivers-r2dbc-spi":"R2DBC 드라이버, R2DBC SPI, Connection 설정","simple-r2dbc-code":"R2DBC 기반 Raw 레벨 코드, Transaction","entity-mysql-data-mapping":"Entity, MySQL 타입 매핑","spring-data-object-mapping-and-creation":"Spring Data Reactive 의 객체생성 방식과 필드 매핑방식","r2dbc-repository":"R2dbcRepository","query-methods":"Query Methods","transactional-transactional-operator":"@Transactional, TransactionalOperator","r2dbc-entity-operations":"R2dbcEntityOperations","r2dbc-entity-template":"R2dbcEntityTemplate"}}]},{kind:"MdxPage",name:"spring-data-r2dbc",route:"/spring-data-r2dbc"},{kind:"Folder",name:"spring-data-redis-reactive",route:"/spring-data-redis-reactive",children:[{kind:"MdxPage",name:"known-cache-strategies",route:"/spring-data-redis-reactive/known-cache-strategies"},{kind:"MdxPage",name:"redis-data-structures",route:"/spring-data-redis-reactive/redis-data-structures"},{kind:"MdxPage",name:"spring-data-redis-reactive",route:"/spring-data-redis-reactive/spring-data-redis-reactive"},{kind:"Meta",data:{"redis-data-structures":"레디스 자료구조들","spring-data-redis-reactive":"Spring Data Redis Reactive","known-cache-strategies":"캐싱전략의 종류"}}]},{kind:"MdxPage",name:"spring-data-redis-reactive",route:"/spring-data-redis-reactive"},{kind:"Meta",data:{index:"Introduction","spring-data-mongodb-reactive":"Spring Data MongoDB Reactive","spring-data-r2dbc":"Spring Data R2dbc","spring-data-redis-reactive":"Spring Data Redis Reactive",contact:{title:"Contact ↗",type:"page",href:"-",newWindow:!0}}}],flexsearch:{codeblocks:!0},title:"R2dbc Drivers R2dbc Spi",headings:s},pageNextRoute:"/spring-data-r2dbc/r2dbc-drivers-r2dbc-spi",nextraLayout:i.ZP,themeConfig:d.Z};r.default=(0,t.j)(c)},8426:function(e,r,n){"use strict";var a=n(5893);n(7294);let t={logo:(0,a.jsx)("span",{children:"Docs Spring Data Reactive"}),project:{link:"https://github.com/chagchagchag/docs-spring-data-reactive"},docsRepositoryBase:"https://github.com/chagchagchag/docs-spring-data-reactive",footer:{text:"Nextra Docs Template"}};r.Z=t},5789:function(){}},function(e){e.O(0,[774,796,888,179],function(){return e(e.s=5111)}),_N_E=e.O()}]);