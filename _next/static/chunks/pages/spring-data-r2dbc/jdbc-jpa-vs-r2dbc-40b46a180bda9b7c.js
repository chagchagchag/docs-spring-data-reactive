(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[596],{532:function(e,a,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/spring-data-r2dbc/jdbc-jpa-vs-r2dbc",function(){return n(774)}])},774:function(e,a,n){"use strict";n.r(a),n.d(a,{__toc:function(){return c}});var t=n(5893),r=n(2673),i=n(373),o=n(8426);n(9128);var d=n(2643);let c=[{depth:2,value:"JDBC, JPA 와의 차이점",id:"jdbc-jpa-와의-차이점"}];function _createMdxContent(e){let a=Object.assign({h2:"h2",p:"p",blockquote:"blockquote",ul:"ul",li:"li",a:"a",strong:"strong"},(0,d.a)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h2,{id:"jdbc-jpa-와의-차이점",children:"JDBC, JPA 와의 차이점"}),"\n",(0,t.jsxs)(a.p,{children:["JDBC, JPA 는 블로킹 기반의 동기(Synchrnoization) 방식의 I/O 연산을 수행합니다. 데이터베이스에 접근해서 커넥션을 획득하고, CRUD 를 수행하기 위해서는 TCP 통신을 수행해야 하는데, JPA 는 JDBC 를 기반으로 이루어져있고 JDBC 는 TCP 통신을 블로킹 기반의 동기(Synchronization)방식으로 수행합니다.",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(a.p,{children:["JDBC 는 굉장히 오래된 라이브러리입니다. AIO와 같은 Java 1.8 이후의 TCP 소켓 통신 스펙(비동기 논블로킹 네트워킹)이 적용되기에는 무리가 있는 라이브러리입니다. ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(a.blockquote,{children:["\n",(0,t.jsx)(a.p,{children:"참고 : 블로킹, 논블로킹, 동기, 비동기에 대한 개념은 아래 문서를 참고해주세요."}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.a,{href:"https://chagchagchag.github.io/docs-spring-webflux/concurrent-programming-basic/sync-vs-async/",children:"동기 vs 비동기"})}),"\n"]}),"\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.a,{href:"https://chagchagchag.github.io/docs-spring-webflux/concurrent-programming-basic/blocking-vs-nonblocking/",children:"블로킹 vs 논블로킹"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"JPA 의 더티체킹"}),(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(a.p,{children:["JPA 에서 흔히 이야기하는 Write Behind, 변경감지 개념은 r2dbc 환경에서 큰 장점이 되지 못합니다. Write Behind 를 한다는 이야기는 엔티티 캐시를 내부에 보관하고 있는다는 의미이고 다른말로 이야기하면 Mutable 하다는 이야기입니다.",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(a.p,{children:["JPA 에서는 객체의 스냅샷 등을 통해 변경감지를 하는 등의 연산을 통해 엔티티의 변경을 감지하지만, R2DBC 로 넘어오면서 개별 데이터의 흐름을 Immutable 하게 처리하는 R2dbc 에서는 JPA 의 변경감지 기능이 더 이상 필요가 없어졌습니다. 다중 트랜잭션, 분산 트랜잭션 환경을 겪어본다면 더티체킹 개념보다는 이벤트의 트랜잭셔널함에 더 집중을 하게 됩니다.",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(a.p,{children:["따라서 Jpa 의 더티체킹이 R2dbc 에서 지원이 안된다는 점에 실망하지 않으셔도 될 것 같습니다.",(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)("br",{})]})}let s={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:a}=Object.assign({},(0,d.a)(),e.components);return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)},pageOpts:{filePath:"pages/spring-data-r2dbc/jdbc-jpa-vs-r2dbc.mdx",route:"/spring-data-r2dbc/jdbc-jpa-vs-r2dbc",timestamp:1711959618e3,pageMap:[{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"spring-data-mongodb-reactive",route:"/spring-data-mongodb-reactive",children:[{kind:"MdxPage",name:"aggregation-pipeline",route:"/spring-data-mongodb-reactive/aggregation-pipeline"},{kind:"MdxPage",name:"document-bson-bson-codec",route:"/spring-data-mongodb-reactive/document-bson-bson-codec"},{kind:"MdxPage",name:"entity",route:"/spring-data-mongodb-reactive/entity"},{kind:"MdxPage",name:"mongo-collection-functions",route:"/spring-data-mongodb-reactive/mongo-collection-functions"},{kind:"MdxPage",name:"mongodb-features",route:"/spring-data-mongodb-reactive/mongodb-features"},{kind:"MdxPage",name:"mongodb-reactive-streams-driver",route:"/spring-data-mongodb-reactive/mongodb-reactive-streams-driver"},{kind:"MdxPage",name:"mongodb-tools",route:"/spring-data-mongodb-reactive/mongodb-tools"},{kind:"MdxPage",name:"query-methods",route:"/spring-data-mongodb-reactive/query-methods"},{kind:"MdxPage",name:"reactive-mongo-operation",route:"/spring-data-mongodb-reactive/reactive-mongo-operation"},{kind:"MdxPage",name:"reactive-mongo-repository",route:"/spring-data-mongodb-reactive/reactive-mongo-repository"},{kind:"MdxPage",name:"reactive-mongo-template",route:"/spring-data-mongodb-reactive/reactive-mongo-template"},{kind:"MdxPage",name:"spring-data-object-mapping-and-creation",route:"/spring-data-mongodb-reactive/spring-data-object-mapping-and-creation"},{kind:"MdxPage",name:"transactional-transactional-operator",route:"/spring-data-mongodb-reactive/transactional-transactional-operator"},{kind:"Meta",data:{"mongodb-features":"MongoDB Features","mongodb-tools":"MongoDB 접근 도구들","mongodb-reactive-streams-driver":"MongoDB Reactive Streams Driver","mongo-collection-functions":"MongoCollection 의 다양한 연산들","document-bson-bson-codec":"Document, BSON, BSON Codec",entity:"Entity","spring-data-object-mapping-and-creation":"Spring Data Reactive 의 객채생성 방식과 매핑방식","reactive-mongo-template":"ReactiveMongoTemplate","reactive-mongo-operation":"ReactiveMongoOperation","reactive-mongo-repository":"ReactiveMongoRepository","query-methods":"Query 메서드","aggregation-pipeline":"Aggregation Pipeline","transactional-transactional-operator":"@Transactional, TransactionalOperator"}}]},{kind:"MdxPage",name:"spring-data-mongodb-reactive",route:"/spring-data-mongodb-reactive"},{kind:"Folder",name:"spring-data-r2dbc",route:"/spring-data-r2dbc",children:[{kind:"MdxPage",name:"entity-mysql-data-mapping",route:"/spring-data-r2dbc/entity-mysql-data-mapping"},{kind:"MdxPage",name:"jdbc-jpa-vs-r2dbc",route:"/spring-data-r2dbc/jdbc-jpa-vs-r2dbc"},{kind:"MdxPage",name:"mysql-features",route:"/spring-data-r2dbc/mysql-features"},{kind:"MdxPage",name:"query-methods",route:"/spring-data-r2dbc/query-methods"},{kind:"MdxPage",name:"r2dbc-entity-operations",route:"/spring-data-r2dbc/r2dbc-entity-operations"},{kind:"MdxPage",name:"r2dbc-entity-template",route:"/spring-data-r2dbc/r2dbc-entity-template"},{kind:"MdxPage",name:"r2dbc-repository",route:"/spring-data-r2dbc/r2dbc-repository"},{kind:"MdxPage",name:"r2dbc-spi-r2dbc-drivers",route:"/spring-data-r2dbc/r2dbc-spi-r2dbc-drivers"},{kind:"MdxPage",name:"simple-r2dbc-code",route:"/spring-data-r2dbc/simple-r2dbc-code"},{kind:"MdxPage",name:"spring-data-object-mapping-and-creation",route:"/spring-data-r2dbc/spring-data-object-mapping-and-creation"},{kind:"MdxPage",name:"transactional-transactional-operator",route:"/spring-data-r2dbc/transactional-transactional-operator"},{kind:"Meta",data:{"mysql-features":"MySQL 특징","jdbc-jpa-vs-r2dbc":"JDBC, JPA 와의 차이점","r2dbc-spi-r2dbc-drivers":"R2DBC SPI, R2DBC 드라이버, Connection 설정","simple-r2dbc-code":"R2DBC 기반 Raw 레벨 코드, Transaction","entity-mysql-data-mapping":"Entity, MySQL 타입 매핑","spring-data-object-mapping-and-creation":"Spring Data Reactive 의 객체생성 방식과 필드 매핑방식","r2dbc-repository":"R2dbcRepository","query-methods":"Query Methods","transactional-transactional-operator":"@Transactional, TransactionalOperator","r2dbc-entity-operations":"R2dbcEntityOperations","r2dbc-entity-template":"R2dbcEntityTemplate"}}]},{kind:"MdxPage",name:"spring-data-r2dbc",route:"/spring-data-r2dbc"},{kind:"Folder",name:"spring-data-redis-reactive",route:"/spring-data-redis-reactive",children:[{kind:"MdxPage",name:"known-cache-strategies",route:"/spring-data-redis-reactive/known-cache-strategies"},{kind:"MdxPage",name:"redis-data-structures",route:"/spring-data-redis-reactive/redis-data-structures"},{kind:"MdxPage",name:"spring-data-redis-reactive",route:"/spring-data-redis-reactive/spring-data-redis-reactive"},{kind:"Meta",data:{"redis-data-structures":"레디스 자료구조들","spring-data-redis-reactive":"Spring Data Redis Reactive","known-cache-strategies":"캐싱전략의 종류"}}]},{kind:"MdxPage",name:"spring-data-redis-reactive",route:"/spring-data-redis-reactive"},{kind:"Meta",data:{index:"Introduction","spring-data-mongodb-reactive":"Spring Data MongoDB Reactive","spring-data-r2dbc":"Spring Data R2dbc","spring-data-redis-reactive":"Spring Data Redis Reactive",contact:{title:"Contact ↗",type:"page",href:"-",newWindow:!0}}}],flexsearch:{codeblocks:!0},title:"Jdbc Jpa Vs R2dbc",headings:c},pageNextRoute:"/spring-data-r2dbc/jdbc-jpa-vs-r2dbc",nextraLayout:i.ZP,themeConfig:o.Z};a.default=(0,r.j)(s)},8426:function(e,a,n){"use strict";var t=n(5893);n(7294);let r={logo:(0,t.jsx)("span",{children:"Docs Spring Data Reactive"}),project:{link:"https://github.com/chagchagchag/docs-spring-data-reactive"},docsRepositoryBase:"https://github.com/chagchagchag/docs-spring-data-reactive",footer:{text:"Nextra Docs Template"}};a.Z=r},5789:function(){}},function(e){e.O(0,[774,796,888,179],function(){return e(e.s=532)}),_N_E=e.O()}]);