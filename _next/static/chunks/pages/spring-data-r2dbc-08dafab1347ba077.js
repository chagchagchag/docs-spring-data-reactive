(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[44],{8257:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/spring-data-r2dbc",function(){return t(2428)}])},2428:function(e,a,t){"use strict";t.r(a),t.d(a,{__toc:function(){return s}});var n=t(5893),r=t(2673),i=t(373),d=t(8426);t(9128);var o=t(2643);let s=[{depth:2,value:"참고자료",id:"참고자료"},{depth:2,value:"목차",id:"목차"}];function _createMdxContent(e){let a=Object.assign({h1:"h1",h2:"h2",p:"p",ul:"ul",li:"li",a:"a"},(0,o.a)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{children:"Spring Data R2DBC"}),"\n",(0,n.jsx)(a.h2,{id:"참고자료",children:"참고자료"}),"\n",(0,n.jsx)(a.p,{children:"docs.spring.io"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"https://docs.spring.io/spring-data/relational/reference/r2dbc.html",children:"Spring Data R2DBC"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://docs.spring.io/spring-data/relational/reference/r2dbc/mapping.html",children:"Mapping"})}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://docs.spring.io/spring-data/relational/reference/r2dbc/repositories.html",children:"R2DBC Repositories"})}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://docs.spring.io/spring-data/relational/reference/r2dbc/query-methods.html",children:"Query Methods"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:"r2dbc Official"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://r2dbc.io/",children:"r2dbc.io"})}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://r2dbc.io/drivers/",children:"r2dbc drivers, SPI"})}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:"r2dbc spi"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["github :  ",(0,n.jsx)(a.a,{href:"https://github.com/r2dbc/r2dbc-spi",children:"R2DBC SPI"})]}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:"github.com/asyncer-io/r2dbc-mysql"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://github.com/asyncer-io/r2dbc-mysql",children:"github.com/asyncer-io/r2dbc-mysql"})}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"https://github.com/asyncer-io/r2dbc-mysql/wiki",children:"R2DBC MySQL wiki"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://github.com/asyncer-io/r2dbc-mysql/wiki/data-type-mapping",children:"Data Type Mapping"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:"Spring Data R2DBC Source"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"https://github.com/spring-projects/spring-data-r2dbc",children:"Spring Data R2DBC"})," : 현재는 관리되지 않으며 ",(0,n.jsx)(a.a,{href:"https://github.com/spring-projects/spring-data-relational",children:"Spring Data Relational"})," 으로 Merge 되어있습니다."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"https://github.com/spring-projects/spring-data-relational",children:"Spring Data Relational"})," : spring-data-jdbc, spring-data-jdbc-distribution, spring-data-relational, spring-data-r2dbc 가 모두 통합되어 있습니다."]}),"\n"]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(a.h2,{id:"목차",children:"목차"})]})}let c={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:a}=Object.assign({},(0,o.a)(),e.components);return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)},pageOpts:{filePath:"pages/spring-data-r2dbc.mdx",route:"/spring-data-r2dbc",timestamp:1712021948e3,pageMap:[{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"spring-data-mongodb-reactive",route:"/spring-data-mongodb-reactive",children:[{kind:"MdxPage",name:"aggregation-pipeline",route:"/spring-data-mongodb-reactive/aggregation-pipeline"},{kind:"MdxPage",name:"document-bson-bson-codec",route:"/spring-data-mongodb-reactive/document-bson-bson-codec"},{kind:"MdxPage",name:"entity",route:"/spring-data-mongodb-reactive/entity"},{kind:"MdxPage",name:"mongo-collection-functions",route:"/spring-data-mongodb-reactive/mongo-collection-functions"},{kind:"MdxPage",name:"mongodb-features",route:"/spring-data-mongodb-reactive/mongodb-features"},{kind:"MdxPage",name:"mongodb-reactive-streams-driver",route:"/spring-data-mongodb-reactive/mongodb-reactive-streams-driver"},{kind:"MdxPage",name:"mongodb-tools",route:"/spring-data-mongodb-reactive/mongodb-tools"},{kind:"MdxPage",name:"query-methods",route:"/spring-data-mongodb-reactive/query-methods"},{kind:"MdxPage",name:"reactive-mongo-operation",route:"/spring-data-mongodb-reactive/reactive-mongo-operation"},{kind:"MdxPage",name:"reactive-mongo-repository",route:"/spring-data-mongodb-reactive/reactive-mongo-repository"},{kind:"MdxPage",name:"reactive-mongo-template",route:"/spring-data-mongodb-reactive/reactive-mongo-template"},{kind:"MdxPage",name:"spring-data-object-mapping-and-creation",route:"/spring-data-mongodb-reactive/spring-data-object-mapping-and-creation"},{kind:"MdxPage",name:"transactional-transactional-operator",route:"/spring-data-mongodb-reactive/transactional-transactional-operator"},{kind:"Meta",data:{"mongodb-features":"MongoDB Features","mongodb-tools":"MongoDB 접근 도구들","mongodb-reactive-streams-driver":"MongoDB Reactive Streams Driver","mongo-collection-functions":"MongoCollection 의 다양한 연산들","document-bson-bson-codec":"Document, BSON, BSON Codec",entity:"Entity","spring-data-object-mapping-and-creation":"Spring Data Reactive 의 객채생성 방식과 매핑방식","reactive-mongo-template":"ReactiveMongoTemplate","reactive-mongo-operation":"ReactiveMongoOperation","reactive-mongo-repository":"ReactiveMongoRepository","query-methods":"Query 메서드","aggregation-pipeline":"Aggregation Pipeline","transactional-transactional-operator":"@Transactional, TransactionalOperator"}}]},{kind:"MdxPage",name:"spring-data-mongodb-reactive",route:"/spring-data-mongodb-reactive"},{kind:"Folder",name:"spring-data-r2dbc",route:"/spring-data-r2dbc",children:[{kind:"MdxPage",name:"entity-mysql-type-mapping",route:"/spring-data-r2dbc/entity-mysql-type-mapping"},{kind:"MdxPage",name:"example-mysql-docker-container",route:"/spring-data-r2dbc/example-mysql-docker-container"},{kind:"MdxPage",name:"jdbc-jpa-vs-r2dbc",route:"/spring-data-r2dbc/jdbc-jpa-vs-r2dbc"},{kind:"MdxPage",name:"mysql-features",route:"/spring-data-r2dbc/mysql-features"},{kind:"MdxPage",name:"query-methods",route:"/spring-data-r2dbc/query-methods"},{kind:"MdxPage",name:"r2dbc-drivers-r2dbc-spi",route:"/spring-data-r2dbc/r2dbc-drivers-r2dbc-spi"},{kind:"MdxPage",name:"r2dbc-entity-template-r2dbc-entity-operations",route:"/spring-data-r2dbc/r2dbc-entity-template-r2dbc-entity-operations"},{kind:"MdxPage",name:"r2dbc-h2-settings",route:"/spring-data-r2dbc/r2dbc-h2-settings"},{kind:"MdxPage",name:"r2dbc-repository",route:"/spring-data-r2dbc/r2dbc-repository"},{kind:"MdxPage",name:"simple-r2dbc-code",route:"/spring-data-r2dbc/simple-r2dbc-code"},{kind:"MdxPage",name:"spring-data-object-mapping-and-creation",route:"/spring-data-r2dbc/spring-data-object-mapping-and-creation"},{kind:"MdxPage",name:"transactional-transactional-operator",route:"/spring-data-r2dbc/transactional-transactional-operator"},{kind:"Meta",data:{"mysql-features":"MySQL 특징","jdbc-jpa-vs-r2dbc":"JDBC, JPA 와의 차이점","r2dbc-drivers-r2dbc-spi":"R2DBC 드라이버, R2DBC SPI, Connection 설정","r2dbc-h2-setting":"R2DBC 에서의 h2 설정","simple-r2dbc-code":"R2DBC 기반 Raw 레벨 코드, Transaction","entity-mysql-type-mapping":"Entity, MySQL 타입 매핑","spring-data-object-mapping-and-creation":"Spring Data Reactive 의 객체생성 방식과 필드 매핑방식","r2dbc-repository":"R2dbcRepository","query-methods":"Query Methods","transactional-transactional-operator":"@Transactional, TransactionalOperator","r2dbc-entity-template-r2dbc-entity-operations":"R2dbcEntityTemplate, R2dbcEntityOperations, FluentR2dbcOperations","example-mysql-docker-container":"예제 용도의 MySQL Docker Container","r2dbc-h2-settings":"R2dbc H2 Settings"}}]},{kind:"MdxPage",name:"spring-data-r2dbc",route:"/spring-data-r2dbc"},{kind:"Folder",name:"spring-data-redis-reactive",route:"/spring-data-redis-reactive",children:[{kind:"MdxPage",name:"known-cache-strategies",route:"/spring-data-redis-reactive/known-cache-strategies"},{kind:"MdxPage",name:"luttuce-examples",route:"/spring-data-redis-reactive/luttuce-examples"},{kind:"MdxPage",name:"redis-connector",route:"/spring-data-redis-reactive/redis-connector"},{kind:"MdxPage",name:"redis-data-structures",route:"/spring-data-redis-reactive/redis-data-structures"},{kind:"MdxPage",name:"redis-replication-sentinel-cluster",route:"/spring-data-redis-reactive/redis-replication-sentinel-cluster"},{kind:"MdxPage",name:"spring-data-redis-reactive-redis-operations",route:"/spring-data-redis-reactive/spring-data-redis-reactive-redis-operations"},{kind:"Meta",data:{"redis-replication-sentinel-cluster":"Redis Replication,Sentinel, Cluster","redis-connector":"Redis Connector (Lettuce, Jedis)","redis-data-structures":"레디스 자료구조들","luttuce-examples":"luttuce 기반 예제 코드들","spring-data-redis-reactive-redis-operations":"Spring Data Redis Reactive, RedisOperations","known-cache-strategies":"캐싱전략의 종류"}}]},{kind:"MdxPage",name:"spring-data-redis-reactive",route:"/spring-data-redis-reactive"},{kind:"Meta",data:{index:"Introduction","spring-data-r2dbc":"Spring Data R2dbc","spring-data-mongodb-reactive":"Spring Data MongoDB Reactive","spring-data-redis-reactive":"Spring Data Redis Reactive",contact:{title:"Contact ↗",type:"page",href:"-",newWindow:!0}}}],flexsearch:{codeblocks:!0},title:"Spring Data R2DBC",headings:s},pageNextRoute:"/spring-data-r2dbc",nextraLayout:i.ZP,themeConfig:d.Z};a.default=(0,r.j)(c)},8426:function(e,a,t){"use strict";var n=t(5893);t(7294);let r={logo:(0,n.jsx)("span",{children:"Docs Spring Data Reactive"}),project:{link:"https://github.com/chagchagchag/docs-spring-data-reactive"},docsRepositoryBase:"https://github.com/chagchagchag/docs-spring-data-reactive",footer:{text:"Nextra Docs Template"}};a.Z=r},5789:function(){}},function(e){e.O(0,[774,796,888,179],function(){return e(e.s=8257)}),_N_E=e.O()}]);